!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFFER	container/buffer.h	/^typedef struct BUFFER{$/;"	s
BUFFER::count	container/buffer.h	/^	uint32_t count;$/;"	m	struct:BUFFER	access:public
BUFFER::freesize	container/buffer.h	/^	uint32_t freesize;$/;"	m	struct:BUFFER	access:public
BUFFER::next	container/buffer.h	/^	struct BUFFER *next;$/;"	m	struct:BUFFER	typeref:struct:BUFFER::BUFFER	access:public
BUFFER::offset	container/buffer.h	/^	uint32_t offset;$/;"	m	struct:BUFFER	access:public
BUFFER::size	container/buffer.h	/^	uint32_t size;$/;"	m	struct:BUFFER	access:public
BUFFER_SIZE	hash/sha1/sha1.c	/^const int BUFFER_SIZE = 8192;$/;"	v
ES_BUFFER_H	container/buffer.h	2;"	d
ES_ITERATOR_H	container/iterator.h	2;"	d
ES_LISTQUEUE_H	container/queue/listqueue.h	2;"	d
ES_LIST_H	container/list/list.h	2;"	d
ES_LITTLETOOL_H	fs/listfile.h	2;"	d
ES_LOG_H	log/log.h	2;"	d
LIST_QUEUE_NODE	container/queue/listqueue.h	/^typedef struct LIST_QUEUE_NODE{$/;"	s
LIST_QUEUE_NODE::next	container/queue/listqueue.h	/^	struct LIST_QUEUE_NODE *next;$/;"	m	struct:LIST_QUEUE_NODE	typeref:struct:LIST_QUEUE_NODE::LIST_QUEUE_NODE	access:public
LOG_DEBUG	log/log.h	20;"	d
LOG_ERROR	log/log.h	37;"	d
LOG_ERROR_MSG	log/log.h	44;"	d
LOG_FATAL	log/log.h	52;"	d
LOG_FATAL_MSG	log/log.h	60;"	d
LOG_INFO	log/log.h	11;"	d
LOG_WORNING	log/log.h	28;"	d
SHA1_H	hash/sha1/sha1.h	2;"	d
SHA1_STRLEN	hash/sha1/sha1.c	/^const int SHA1_STRLEN = 20;$/;"	v
SHA1_STRLEN	hash/sha1/sha1.h	/^extern const int SHA1_STRLEN;$/;"	x
SHA1_file	hash/sha1/sha1.c	/^int SHA1_file(const char* filepath, uint8_t *result)$/;"	f	signature:(const char* filepath, uint8_t *result)
SHA1_file	hash/sha1/sha1.h	/^extern int SHA1_file(const char* filepath, uint8_t *result);$/;"	p	signature:(const char* filepath, uint8_t *result)
SHA1_file_fd	hash/sha1/sha1.c	/^int SHA1_file_fd(int filefd, uint8_t *result)$/;"	f	signature:(int filefd, uint8_t *result)
SHA1_file_fd	hash/sha1/sha1.h	/^extern int SHA1_file_fd(int filefd, uint8_t *result);$/;"	p	signature:(int filefd, uint8_t *result)
__anon1::blksize	container/queue/listqueue.h	/^	uint32_t blksize;$/;"	m	struct:__anon1	access:public
__anon1::cur_buf	container/queue/listqueue.h	/^	buffer_t *cur_buf;$/;"	m	struct:__anon1	access:public
__anon1::head	container/queue/listqueue.h	/^	listqueue_node_t *head;$/;"	m	struct:__anon1	access:public
__anon1::head_buf	container/queue/listqueue.h	/^	buffer_t *head_buf;$/;"	m	struct:__anon1	access:public
__anon1::recycle_buf	container/queue/listqueue.h	/^	buffer_t *recycle_buf;$/;"	m	struct:__anon1	access:public
__anon1::tail	container/queue/listqueue.h	/^	listqueue_node_t *tail;$/;"	m	struct:__anon1	access:public
__anon2::data	container/iterator.h	/^	void *data;$/;"	m	struct:__anon2	access:public
__anon3::data	container/list/list.h	/^	void *data;$/;"	m	struct:__anon3	access:public
__anon3::next	container/list/list.h	/^	list_node_t *next;$/;"	m	struct:__anon3	access:public
__anon4::head	container/list/list.h	/^	list_node_t *head;$/;"	m	struct:__anon4	access:public
__anon4::tail	container/list/list.h	/^	list_node_t *tail;$/;"	m	struct:__anon4	access:public
_get_buf	container/queue/listqueue.c	/^static buffer_t* _get_buf(listqueue_t *listqueue)$/;"	f	file:	signature:(listqueue_t *listqueue)
_get_node	container/queue/listqueue.c	/^static listqueue_node_t* _get_node(listqueue_t *listqueue, uint32_t size)$/;"	f	file:	signature:(listqueue_t *listqueue, uint32_t size)
blksize	container/queue/listqueue.h	/^	uint32_t blksize;$/;"	m	struct:__anon1	access:public
buffer_alloc	container/buffer.c	/^void* buffer_alloc(buffer_t *buffer,uint32_t size)$/;"	f	signature:(buffer_t *buffer,uint32_t size)
buffer_alloc	container/buffer.h	/^extern void* buffer_alloc(buffer_t *buffer, uint32_t size);$/;"	p	signature:(buffer_t *buffer, uint32_t size)
buffer_close	container/buffer.c	/^int buffer_close(buffer_t* buffer)$/;"	f	signature:(buffer_t* buffer)
buffer_close	container/buffer.h	/^extern int buffer_close(buffer_t * buffer);$/;"	p	signature:(buffer_t * buffer)
buffer_new	container/buffer.c	/^buffer_t* buffer_new(uint32_t blksize)$/;"	f	signature:(uint32_t blksize)
buffer_new	container/buffer.h	/^extern buffer_t* buffer_new(uint32_t blksize);$/;"	p	signature:(uint32_t blksize)
buffer_t	container/buffer.h	/^}buffer_t;$/;"	t	typeref:struct:BUFFER
count	container/buffer.h	/^	uint32_t count;$/;"	m	struct:BUFFER	access:public
cur_buf	container/queue/listqueue.h	/^	buffer_t *cur_buf;$/;"	m	struct:__anon1	access:public
data	container/iterator.h	/^	void *data;$/;"	m	struct:__anon2	access:public
data	container/list/list.h	/^	void *data;$/;"	m	struct:__anon3	access:public
freesize	container/buffer.h	/^	uint32_t freesize;$/;"	m	struct:BUFFER	access:public
getLogTime	log/log.c	/^void getLogTime(char *format)$/;"	f	signature:(char *format)
head	container/list/list.h	/^	list_node_t *head;$/;"	m	struct:__anon4	access:public
head	container/queue/listqueue.h	/^	listqueue_node_t *head;$/;"	m	struct:__anon1	access:public
head_buf	container/queue/listqueue.h	/^	buffer_t *head_buf;$/;"	m	struct:__anon1	access:public
iterator_t	container/iterator.h	/^}iterator_t;$/;"	t	typeref:struct:__anon2
list_close	container/list/list.c	/^int list_close(list_t* list)$/;"	f	signature:(list_t* list)
list_close	container/list/list.h	/^extern int list_close(list_t* list);$/;"	p	signature:(list_t* list)
list_get_head	container/list/list.h	/^extern list_node_t* list_get_head();$/;"	p	signature:()
list_new	container/list/list.c	/^list_t* list_new(int blksize)$/;"	f	signature:(int blksize)
list_new	container/list/list.h	/^extern list_t* list_new(int blksize);$/;"	p	signature:(int blksize)
list_node_t	container/list/list.h	/^}list_node_t;$/;"	t	typeref:struct:__anon3
list_push	container/list/list.c	/^list_t* list_push(void *data)$/;"	f	signature:(void *data)
list_push	container/list/list.h	/^extern list_t* list_push(void *data);$/;"	p	signature:(void *data)
list_t	container/list/list.h	/^}list_t;$/;"	t	typeref:struct:__anon4
listfile	fs/listfile.c	/^int listfile(const char * path, int prelen, int ifpasshid, listqueue_t *result)$/;"	f	signature:(const char * path, int prelen, int ifpasshid, listqueue_t *result)
listfile	fs/listfile.h	/^extern int listfile(const char * path, int prelen, int ifpasshid, listqueue_t *result);$/;"	p	signature:(const char * path, int prelen, int ifpasshid, listqueue_t *result)
listqueue_close	container/queue/listqueue.c	/^int listqueue_close(listqueue_t* listqueue)$/;"	f	signature:(listqueue_t* listqueue)
listqueue_close	container/queue/listqueue.h	/^extern int listqueue_close(listqueue_t* list);$/;"	p	signature:(listqueue_t* list)
listqueue_iter_next	container/queue/listqueue.c	/^void* listqueue_iter_next(iterator_t *iter)$/;"	f	signature:(iterator_t *iter)
listqueue_iter_next	container/queue/listqueue.h	/^extern void* listqueue_iter_next(iterator_t *iter);$/;"	p	signature:(iterator_t *iter)
listqueue_iterator	container/queue/listqueue.c	/^iterator_t listqueue_iterator(listqueue_t *listqueue)$/;"	f	signature:(listqueue_t *listqueue)
listqueue_iterator	container/queue/listqueue.h	/^extern iterator_t listqueue_iterator(listqueue_t *listqueue);$/;"	p	signature:(listqueue_t *listqueue)
listqueue_new	container/queue/listqueue.c	/^listqueue_t* listqueue_new(uint32_t blksize)$/;"	f	signature:(uint32_t blksize)
listqueue_new	container/queue/listqueue.h	/^extern listqueue_t* listqueue_new(uint32_t blksize);$/;"	p	signature:(uint32_t blksize)
listqueue_node_t	container/queue/listqueue.h	/^}listqueue_node_t;$/;"	t	typeref:struct:LIST_QUEUE_NODE
listqueue_push	container/queue/listqueue.c	/^void* listqueue_push(listqueue_t *listqueue, void *data, uint32_t size)$/;"	f	signature:(listqueue_t *listqueue, void *data, uint32_t size)
listqueue_push	container/queue/listqueue.h	/^extern void* listqueue_push(listqueue_t* listqueue, void *data, uint32_t size);$/;"	p	signature:(listqueue_t* listqueue, void *data, uint32_t size)
listqueue_push_new	container/queue/listqueue.c	/^void* listqueue_push_new(listqueue_t *listqueue, uint32_t size)$/;"	f	signature:(listqueue_t *listqueue, uint32_t size)
listqueue_push_new	container/queue/listqueue.h	/^extern void* listqueue_push_new(listqueue_t* listqueue, uint32_t size);$/;"	p	signature:(listqueue_t* listqueue, uint32_t size)
listqueue_t	container/queue/listqueue.h	/^}listqueue_t;$/;"	t	typeref:struct:__anon1
main	testmain.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
next	container/buffer.h	/^	struct BUFFER *next;$/;"	m	struct:BUFFER	typeref:struct:BUFFER::BUFFER	access:public
next	container/list/list.h	/^	list_node_t *next;$/;"	m	struct:__anon3	access:public
next	container/queue/listqueue.h	/^	struct LIST_QUEUE_NODE *next;$/;"	m	struct:LIST_QUEUE_NODE	typeref:struct:LIST_QUEUE_NODE::LIST_QUEUE_NODE	access:public
offset	container/buffer.h	/^	uint32_t offset;$/;"	m	struct:BUFFER	access:public
print_sha1	hash/sha1/sha1.c	/^void print_sha1(uint8_t *sha1)$/;"	f	signature:(uint8_t *sha1)
print_sha1	hash/sha1/sha1.h	/^extern void print_sha1(uint8_t *sha1);$/;"	p	signature:(uint8_t *sha1)
recycle_buf	container/queue/listqueue.h	/^	buffer_t *recycle_buf;$/;"	m	struct:__anon1	access:public
size	container/buffer.h	/^	uint32_t size;$/;"	m	struct:BUFFER	access:public
tail	container/list/list.h	/^	list_node_t *tail;$/;"	m	struct:__anon4	access:public
tail	container/queue/listqueue.h	/^	listqueue_node_t *tail;$/;"	m	struct:__anon1	access:public
